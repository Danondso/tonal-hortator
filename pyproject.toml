[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tonal-hortator"
version = "2.0.1"
description = "AI-powered local music playlist generator using Ollama embeddings"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "numpy<3.0",
    "coverage",
    "requests",
    "loguru",
    "ollama",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "flake8",
    "black",
    "isort",
    "mypy",
    "bandit",
]

[project.scripts]
tonal-hortator = "tonal_hortator.cli:main"
generate-playlist = "tonal_hortator.cli:generate_playlist"
embed-tracks = "tonal_hortator.cli:embed_tracks"

[tool.setuptools.packages.find]
include = ["tonal_hortator*"]
exclude = [
    "playlists*",
    "test_playlists*",
    "logs*",
    "htmlcov*",
    "venv*",
    ".pytest_cache*",
    ".mypy_cache*",
    "__pycache__*",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tonal_hortator"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = [
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/ENV/*",
    "*/tonal-hortator-v2-env/*",
    "*/site-packages/*",
    "*/dist-packages/*",
    "*/__pycache__/*",
    "*/build/*",
    "*/dist/*",
    "*/.eggs/*",
    "*/.tox/*",
    "*/.pytest_cache/*",
    "*/.mypy_cache/*"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ollama.*",
    "numpy.*",
    "sqlite3.*",
    "xml.*",
    "urllib.*",
    "subprocess.*",
    "argparse.*",
    "logging.*",
    "datetime.*",
    "pathlib.*",
    "os.*",
    "sys.*",
    "time.*",
    "re.*",
    "json.*",
    "pickle.*",
    "plistlib.*",
    "unittest.*",
    "pytest.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=tonal_hortator",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["tonal_hortator"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/tonal-hortator-v2-env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 